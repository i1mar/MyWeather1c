&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Дата = ТекущаяДата();
	Объект.Город = Справочники.Города.Москва;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НачатьПолучениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	НачатьПолучениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	НачатьПолучениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура НачатьПолучениеДанных()

	Если НачалоДня(Объект.Дата) < НачалоДня(ТекущаяДата()) Тогда
		ПоказатьПредупреждение( , "Прогноз на прошедшие даты недоступен");
		Возврат;
	ИначеЕсли (НачалоДня(Объект.Дата)- НачалоДня(ТекущаяДата())) / (60 * 60 * 24) > 7 Тогда
		ПоказатьПредупреждение( , "Прогноз доступен на 7 дней");
		Возврат;
	КонецЕсли;

	ПроверитьЗаполненностьРеквизитов();
	ГородСтрока = НРег(СокрЛП(Объект.Город));
	ПолучитьДанныеОПогодеКлиент(ГородСтрока, Объект.Дата, ПроизошлаОшибка, ТекстОшибки);
	
	Если ПроизошлаОшибка Тогда
		ПоказатьПредупреждение( , ТекстОшибки);
		СброситьПредыдущиеОшибки();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполненностьРеквизитов()

	Если Не ЗначениеЗаполнено(Объект.Город) Тогда
		Объект.Город = ПредопределенноеЗначение("Справочник.Города.Москва");
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.Дата = ТекущаяДата();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СброситьПредыдущиеОшибки()
	ТекстОшибки     = "";
	ПроизошлаОшибка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеОПогодеКлиент(Город, Дата, ПроизошлаОшибка, ТекстОшибки)

	ЭтоТекущийПериод = НачалоДня(Дата) = НачалоДня(ТекущаяДата());
	УстановитьВидимостьРеквизитовПериода(ЭтоТекущийПериод);
	УстановитьЗаголовокТаблицыТемператур(ЭтоТекущийПериод);
	
	ПолучитьДанныеОПогодеСервер(Город, Объект.Дата, ПроизошлаОшибка, ТекстОшибки);

	Если Не ПроизошлаОшибка Тогда
	
		Если ЭтоТекущийПериод Тогда
			ТемператураПоложительна = СтрНайти(Объект.ТекущаяТемпература, "+") > 0;
			ВидимостьПлюс = ТемператураПоложительна;
			ВидимостьМинус = Не ТемператураПоложительна;
			УстановитьВидимостьЗнакаТемпературы(ВидимостьПлюс, ВидимостьМинус);
			Элементы.ДекорацияПлюс.Заголовок = Объект.ТекущаяТемпература;
			Элементы.ДекорацияМинус.Заголовок = Объект.ТекущаяТемпература;
		Иначе
			УстановитьВидимостьЗнакаТемпературы(Ложь, Ложь);
			Элементы.ДекорацияТемператураБудущийПериод.Видимость = Истина;
			Элементы.ДекорацияТемператураБудущийПериод.Заголовок = СтрШаблон("%1 - %2  С", Объект.min, Объект.max);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьРеквизитовПериода(ЭтоТекущийПериод)
	УстановитьВидимостьЗнакаТемпературы(ЭтоТекущийПериод, ЭтоТекущийПериод);
	Элементы.ДекорацияТемператураБудущийПериод.Видимость = Не ЭтоТекущийПериод;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЗнакаТемпературы(ВидимостьПлюс, ВидимостьМинус)
	Элементы.ДекорацияМинус.Видимость       = ВидимостьМинус;
	Элементы.ДекорацияПлюс.Видимость        = ВидимостьПлюс;
КонецПроцедуры

&НаКлиенте
Функция УстановитьЗаголовокТаблицыТемператур(ЭтоТекущийПериод)
	
	Элементы.ТаблицаДанныхКолонка0.Заголовок = ?(ЭтоТекущийПериод, "0:00", "Ночь");
	Элементы.ТаблицаДанныхКолонка1.Заголовок = ?(ЭтоТекущийПериод, "3:00", "Утро");
	Элементы.ТаблицаДанныхКолонка2.Заголовок = ?(ЭтоТекущийПериод, "6:00", "День");
	Элементы.ТаблицаДанныхКолонка3.Заголовок = ?(ЭтоТекущийПериод, "9:00", "Вечер");
	
	Элементы.ТаблицаДанныхКолонка4.Видимость = ЭтоТекущийПериод;
	Элементы.ТаблицаДанныхКолонка5.Видимость = ЭтоТекущийПериод;
	Элементы.ТаблицаДанныхКолонка6.Видимость = ЭтоТекущийПериод;
	Элементы.ТаблицаДанныхКолонка7.Видимость = ЭтоТекущийПериод;
	
КонецФункции

&НаСервере
Процедура ПолучитьДанныеОПогодеСервер(Город, Дата, ПроизошлаОшибка, ТекстОшибки)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураРезультат = ОбработкаОбъект.ПолучитьДанныеОПогоде(Город, Объект.Дата, ПроизошлаОшибка, ТекстОшибки);

	Если Не СтруктураРезультат = Неопределено Тогда
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
		ЗаполнитьТаблицуДанных(СтруктураРезультат);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДанных(СтруктураРезультат)

	Объект.max = 0;
	Объект.min = 0;
	Объект.ТаблицаДанных.Очистить();
	
	Для Каждого ТекПоказатель Из СтруктураРезультат Цикл
		
		ТекСтрока = Объект.ТаблицаДанных.Добавить();
		ТекСтрока.КолонкаОписание = ТекПоказатель.Ключ;
		Сч = 0;

		Для Каждого текКолонка Из ТекПоказатель.Значение Цикл

			Если Сч > 7 Тогда
				Возврат;
			КонецЕсли;

			ТекСтрока["Колонка" + Сч] = текКолонка;
			Если ТекПоказатель.Ключ = "Температура" Тогда

				ЧисловоеЗначение = ПреобразоватьТекстВЧисло(ТекСтрока["Колонка" + Сч]);
				Объект.max = ?(Объект.max > ЧисловоеЗначение, Объект.max, ЧисловоеЗначение);
				Объект.min = ?(Объект.min < ЧисловоеЗначение, Объект.min, ЧисловоеЗначение);

			КонецЕсли;
			Сч = Сч + 1;

		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПреобразоватьТекстВЧисло(ТекЗначение)

	ТекстСтрока = СтрЗаменить(ТекЗначение, "+", "");
	ТекстСтрока = СтрЗаменить(ТекстСтрока, "-", "");
	ТекстСтрока = СтрЗаменить(ТекстСтрока, "°", "");
	ТекстСтрока = СтрЗаменить(ТекстСтрока, "C", "");
	ТекстСтрока = СтрЗаменить(ТекстСтрока, "С", "");
	ТекстСтрока = СтрЗаменить(ТекстСтрока, " ", "");
	ТекстСтрока = СокрЛП(ТекстСтрока);

	Попытка
		ТекстСтрока = Число(ТекстСтрока);
	Исключение
		ТекстСтрока = 0;
	КонецПопытки;

	Возврат ТекстСтрока;

КонецФункции