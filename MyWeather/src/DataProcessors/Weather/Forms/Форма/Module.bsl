&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Дата = ТекущаяДата();
	Объект.Город = Справочники.Города.Москва;

КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)

	Если Не ЗначениеЗаполнено(Объект.Город) Тогда
		Объект.Город = ПредопределенноеЗначение("Справочник.Города.Москва");
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.Дата = ТекущаяДата();
	КонецЕсли;

	ГородСтрока = НРег(СокрЛП(Объект.Город));
	ПолучитьДанныеОПогоде(ГородСтрока, ПроизошлаОшибка, ТекстОшибки);

	Если ПроизошлаОшибка Тогда
		ПоказатьПредупреждение(,ТекстОшибки);
		СброситьПредыдущиеОшибки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьПредыдущиеОшибки()
	ТекстОшибки     = "";
	ПроизошлаОшибка = Ложь;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеОПогоде(Город, ПроизошлаОшибка, ТекстОшибки)
		
	Соединение=Новый HTTPСоединение("sinoptik.com.ru", 443, , , , , Новый ЗащищенноеСоединениеOpenSSL);
//	Запрос = Новый HTTPЗапрос("/погода-москва/2020-11-14");
	ТекстЗапроса = СтрШаблон("/погода-%1", Город);
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	Ответ = Соединение.Получить(Запрос);
	
	МассивФильтров = ОбщегоНазначенияСервер.СформироватьМассивФильтров();
	
	Если Ответ.КодСостояния = 200 Тогда

		СтрокаHTML = Ответ.ПолучитьТелоКакСтроку();

		Чтение = Новый ЧтениеHTML;
		Чтение.УстановитьСтроку(СтрокаHTML);
		Построитель = Новый ПостроительDOM;

		ДокHTML = Построитель.Прочитать(Чтение);
		ДокHTML.НормализоватьДокумент();

		МассивУзловТекТемпература = ДокHTML.НайтиПоФильтру(МассивФильтров[0]);
		Если Не МассивУзловТекТемпература = Неопределено И МассивУзловТекТемпература.Количество() > 0 Тогда
			Объект.ТекущаяТемпература = СокрЛП(МассивУзловТекТемпература[0].ТекстовоеСодержимое);
		КонецЕсли;

		МассивУзловТекОписание = ДокHTML.НайтиПоФильтру(МассивФильтров[1]);
		Если Не МассивУзловТекОписание = Неопределено И МассивУзловТекОписание.Количество() > 0 Тогда
			Объект.Описание = СокрЛП(МассивУзловТекОписание[0].ТекстовоеСодержимое);
		КонецЕсли;

		МассивУзловТаблицаТемператур  = ДокHTML.НайтиПоФильтру(МассивФильтров[2]);
		МассивУзловТаблицаЧувствуется = ДокHTML.НайтиПоФильтру(МассивФильтров[3]);
		МассивУзловТаблицаВетер       = ДокHTML.НайтиПоФильтру(МассивФильтров[4]);

		СтруктураВозвращаемыхДанных = Новый Структура("Температура,Ощущается,Ветер");
		Если Не МассивУзловТаблицаТемператур = Неопределено И МассивУзловТаблицаТемператур.Количество() > 0 Тогда
			СтруктураВозвращаемыхДанных.Температура = ПеренестиДанныеВМассив(МассивУзловТаблицаТемператур);
		КонецЕсли;

		Если Не МассивУзловТаблицаЧувствуется = Неопределено И МассивУзловТаблицаЧувствуется.Количество() > 0 Тогда
			СтруктураВозвращаемыхДанных.Ощущается = ПеренестиДанныеВМассив(МассивУзловТаблицаЧувствуется);
		КонецЕсли;

		Если Не МассивУзловТаблицаВетер = Неопределено И МассивУзловТаблицаВетер.Количество() > 0 Тогда
			СтруктураВозвращаемыхДанных.Ветер = ПеренестиДанныеВМассив(МассивУзловТаблицаВетер);
		КонецЕсли;

	ИначеЕсли Ответ.КодСостояния = 404 Тогда
		ПроизошлаОшибка = Истина;
		ТекстОшибки = "Указнный город не найден";
	Иначе
		ПроизошлаОшибка = Истина;
		ТекстОшибки =  "Не удалось установить соединение";
	КонецЕсли;

	Возврат СтруктураВозвращаемыхДанных; 
КонецФункции

Функция ПеренестиДанныеВМассив(МассивВходящихДанных)

	ВложенныйМассив = Новый Массив;
	Для Каждого тСтрока Из МассивВходящихДанных Цикл
		ВложенныйМассив.Добавить(СокрЛП(тСтрока.ТекстовоеСодержимое));
	КонецЦикла;
	Возврат ВложенныйМассив;

КонецФункции